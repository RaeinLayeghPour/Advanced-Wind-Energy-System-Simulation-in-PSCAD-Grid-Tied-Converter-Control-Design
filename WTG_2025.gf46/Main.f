!=======================================================================
! Generated by: PSCAD v5.0.2.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : Main
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE MainDyn()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices
      INTEGER  NT_1(3), NT_11(3), NT_16(3)

! Control Signals
      INTEGER  IT_1, IT_2, IT_3, IT_4, IT_5, IT_6
      INTEGER  IT_7, IT_8, IT_9, Shunt_Breaker
      INTEGER  InitGv, InitEx
      REAL     RT_1, RT_2, RT_3, RT_4, RT_5, RT_6
      REAL     RT_7, RT_8, RT_9, RT_10, RT_11, w
      REAL     RT_12, Pgen, Qgen, T_electric
      REAL     RT_13, RT_14, RT_15, RT_16, RT_17
      REAL     Idc1, RT_18, RT_19, RT_20, Alpha
      REAL     RT_21, V_DC_Bus, RT_22, Idc2
      REAL     RT_23, I_wtg(3), V_wtg(3), P_wtg
      REAL     Q_wtg, U_rms_wtg, I_grid(3)
      REAL     Vgrid(3), Pgrid, Qgrid, U_rms_grid
      REAL     P_grid, Q_grid, V_grid

! Internal Variables
      LOGICAL  LVD1_1
      INTEGER  IVD1_1, IVD1_2, IVD1_3
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4
      REAL     RVD1_5, RVD1_6, RVD1_7, RVD1_8
      REAL     RVD1_9, RVD1_10, RVD1_11, RVD1_12
      REAL     RVD1_13, RVD1_14, RVD1_15, RVD1_16
      REAL     RVD1_17, RVD1_18

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOI, ISTOF, IT_0                  ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOI     = NSTOI
      NSTOI     = NSTOI + 12
      ISTOF     = NSTOF
      NSTOF     = NSTOF + 52
      IPGB      = NPGB
      NPGB      = NPGB + 26
      INODE     = NNODE + 2
      NNODE     = NNODE + 32
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 95
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 6
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      RT_1     = STOF(ISTOF + 1)
      RT_2     = STOF(ISTOF + 2)
      RT_3     = STOF(ISTOF + 3)
      IT_1     = STOI(ISTOI + 1)
      RT_4     = STOF(ISTOF + 4)
      RT_5     = STOF(ISTOF + 5)
      RT_6     = STOF(ISTOF + 6)
      RT_7     = STOF(ISTOF + 7)
      RT_8     = STOF(ISTOF + 8)
      RT_9     = STOF(ISTOF + 9)
      RT_10    = STOF(ISTOF + 10)
      RT_11    = STOF(ISTOF + 11)
      w        = STOF(ISTOF + 12)
      RT_12    = STOF(ISTOF + 13)
      Pgen     = STOF(ISTOF + 14)
      Qgen     = STOF(ISTOF + 15)
      T_electric = STOF(ISTOF + 16)
      RT_13    = STOF(ISTOF + 17)
      RT_14    = STOF(ISTOF + 18)
      RT_15    = STOF(ISTOF + 19)
      IT_2     = STOI(ISTOI + 2)
      IT_3     = STOI(ISTOI + 3)
      IT_4     = STOI(ISTOI + 4)
      IT_5     = STOI(ISTOI + 5)
      IT_6     = STOI(ISTOI + 6)
      IT_7     = STOI(ISTOI + 7)
      RT_16    = STOF(ISTOF + 20)
      RT_17    = STOF(ISTOF + 21)
      Idc1     = STOF(ISTOF + 22)
      RT_18    = STOF(ISTOF + 23)
      RT_19    = STOF(ISTOF + 24)
      RT_20    = STOF(ISTOF + 25)
      IT_8     = STOI(ISTOI + 8)
      Alpha    = STOF(ISTOF + 26)
      RT_21    = STOF(ISTOF + 27)
      V_DC_Bus = STOF(ISTOF + 28)
      RT_22    = STOF(ISTOF + 29)
      Idc2     = STOF(ISTOF + 30)
      RT_23    = STOF(ISTOF + 31)
      IT_9     = STOI(ISTOI + 9)
      P_wtg    = STOF(ISTOF + 38)
      Q_wtg    = STOF(ISTOF + 39)
      U_rms_wtg = STOF(ISTOF + 40)
      Pgrid    = STOF(ISTOF + 47)
      Qgrid    = STOF(ISTOF + 48)
      U_rms_grid = STOF(ISTOF + 49)
      Shunt_Breaker = STOI(ISTOI + 10)
      InitGv   = STOI(ISTOI + 11)
      InitEx   = STOI(ISTOI + 12)
      P_grid   = STOF(ISTOF + 50)
      Q_grid   = STOF(ISTOF + 51)
      V_grid   = STOF(ISTOF + 52)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         I_wtg(IT_0) = STOF(ISTOF + 31 + IT_0)
         V_wtg(IT_0) = STOF(ISTOF + 34 + IT_0)
         I_grid(IT_0) = STOF(ISTOF + 40 + IT_0)
         Vgrid(IT_0) = STOF(ISTOF + 43 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_1(IT_0) = NODE(INODE + 3 + IT_0)
         NT_11(IT_0) = NODE(INODE + 18 + IT_0)
         NT_16(IT_0) = NODE(INODE + 27 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 10:[Sequencer_Start] Sequencer (Start of sequence of events) 
! Sequencer - Start
      IT_4 = 1
! Update PSCAD Graphics
      IF ( FIRSTSTEP ) THEN
         CALL PSCAD_AGI2(ICALL_NO,18908564,STORI(NSTORI),"State")
      ENDIF
      IF ( STORI(NSTORI) .NE. IT_4 ) THEN
         CALL PSCAD_AGI2(ICALL_NO,18908564,IT_4,"State")
      ENDIF
      STORI(NSTORI) = IT_4
      NSTORI = NSTORI + 1

! 20:[wind_source] Wind Source 
      CALL WINDSRC1_EXE(0.0,RT_1)

! 30:[Sequencer_Breaker] Sequencer (Close/Open Breaker) 
! Sequencer - Open Breaker
      IT_5 = 0
      IF ( IT_4 .EQ. 1 ) THEN
      Shunt_Breaker = 1
         IT_5 = 1
      ENDIF
! Update PSCAD Graphics
      IF ( FIRSTSTEP ) THEN
         CALL PSCAD_AGI2(ICALL_NO,2002538889,STORI(NSTORI),"State")
      ENDIF
      IF ( STORI(NSTORI) .NE. IT_5 ) THEN
         CALL PSCAD_AGI2(ICALL_NO,2002538889,IT_5,"State")
      ENDIF
      STORI(NSTORI) = IT_5
      NSTORI = NSTORI + 1

! 40:[Sequencer_Wait] Sequencer (Wait for an event) 
! Sequencer - Wait Until Specified Time
      IT_6 = 0
      IF ( IT_5 .EQ. 1 ) THEN
         IF ( TIME.GT.3.1613 ) THEN
            IT_6 = 1
         ENDIF
      ENDIF
! Update PSCAD Graphics
      IF ( FIRSTSTEP ) THEN
         CALL PSCAD_AGI2(ICALL_NO,458069308,STORI(NSTORI),"State")
      ENDIF
      IF ( STORI(NSTORI) .NE. IT_6 ) THEN
         CALL PSCAD_AGI2(ICALL_NO,458069308,IT_6,"State")
      ENDIF
      STORI(NSTORI) = IT_6
      NSTORI = NSTORI + 1

! 50:[Sequencer_Breaker] Sequencer (Close/Open Breaker) 
! Sequencer - Close Breaker
      IT_7 = 0
      IF ( IT_6 .EQ. 1 ) THEN
      Shunt_Breaker = 0
         IT_7 = 1
      ENDIF
! Update PSCAD Graphics
      IF ( FIRSTSTEP ) THEN
         CALL PSCAD_AGI2(ICALL_NO,1502290153,STORI(NSTORI),"State")
      ENDIF
      IF ( STORI(NSTORI) .NE. IT_7 ) THEN
         CALL PSCAD_AGI2(ICALL_NO,1502290153,IT_7,"State")
      ENDIF
      STORI(NSTORI) = IT_7
      NSTORI = NSTORI + 1

! 60:[const] Real Constant 
      RT_9 = 1.0

! 100:[consti] Integer Constant 
      IT_1 = 0

! 110:[const] Real Constant 
      RT_12 = 314.0

! 120:[breaker1] Single Phase Breaker 'Shunt_Breaker'
      IVD1_2 = NSTORI
      NSTORI = NSTORI + 1
      CALL E1PBRKR1_EXE(SS, (IBRCH+26),0.005,1000000.0,0,NINT(1.0-REAL(S&
     &hunt_Breaker)))
      IVD1_1 = 2*E_BtoI(OPENBR( (IBRCH+26),SS))
      IF (FIRSTSTEP .OR. (STORI(IVD1_2) .NE. IVD1_1)) THEN
         CALL PSCAD_AGI2(ICALL_NO,160589460,IVD1_1,"BOpen")
      ENDIF
      STORI(IVD1_2) = 2*E_BtoI(OPENBR( (IBRCH+26),SS))

! 140:[const] Real Constant 
      RT_11 = 120.0

! 150:[consti] Integer Constant 
      IT_3 = 0

! 210:[source3] Three Phase Voltage Source Model 1 'Grid'
!  3-Phase source: Grid
      RVD1_1 = RTCF(NRTCF+12)
      RVD1_2 = RTCF(NRTCF+14)
      RVD1_3 = RTCF(NRTCF+13)
      CALL ESYS651_EXE(SS, (IBRCH+23), (IBRCH+24), (IBRCH+25),0,0,0, SS,&
     & NT_16(1),NT_16(2),NT_16(3), 0, RVD1_2, RVD1_1, 0.05, 1.0, 1.0, 1.&
     &0,RVD1_3, 1.0,0.02,0.05, 1.0,0.02,0.05, RVD1_4, RVD1_5, RVD1_6, RV&
     &D1_7)
      P_grid = RVD1_4
      Q_grid = RVD1_5
      V_grid = RVD1_6

! 220:[tfaultn] Timed Fault Logic 
! Timed fault logic
      IT_9 = 0
      IF ( TIME .GE. 40.0 ) IT_9 = 1
      IF ( TIME .GE. (40.0+0.08) ) IT_9 = 0

! 230:[const] Real Constant 
      RT_21 = 2.56

! 240:[vdcl] Voltage Dependent Current Limits 
      CALL VDCL31_EXE(RT_21,V_DC_Bus,0.07,0.889,0.983,RT_22)

! 390:[mult] Multiplier 
      RT_10 = w * RT_12

! 400:[div] Divider 
      IF (ABS(RT_11) .LT. 1.0E-100) THEN
         IF (RT_11 .LT. 0.0)  THEN
            RT_3 = -1.0E100 * RT_10
         ELSE
            RT_3 =  1.0E100 * RT_10
         ENDIF
      ELSE
         RT_3 = RT_10 / RT_11
      ENDIF

! 410:[wind_turbine] Wind Turbine 
      CALL COMPONENT_ID(ICALL_NO,368618966)
      CALL WINDTRB1_EXE(0,RT_1,RT_3,REAL(IT_1),1.0,RT_2,RT_4)

! 420:[sync_machine] Synchronous Machine 'Synchronous_G'
      CALL COMPONENT_ID(ICALL_NO,532138712)
! RVD1_1 - Speed
! RVD1_2 - Neutral Voltage
! RVD1_3 - Neutral Current
! RVD1_4 - Load Angle
! RVD1_5 - Rotor Mechanical Angle
! RVD1_6 - Real Power output
! RVD1_7 - Reactive Power output
! RVD1_8 - Mechanical Torque
! RVD1_9 - Electrical Torque
! RVD1_10:15 - Monitored STOR locations
! RVD1_16:17 - Terminal Voltage RMS,pu
! RVD1_18 - Inverse of Base MVA
! IVD1_2 - Machine is active, Initialize exciter
! IVD1_3 - Torque driven, Initialize governor/turbine
      STORI(NSTORI) = NINT(STOR(NEXC+294))
      IVD1_1 = NRTCF
      RVD1_1 = RTCF(IVD1_1+2)
      CALL SYNCMC3P2_EXE(SS,  (IBRCH+1), (IBRCH+2), (IBRCH+3), (IBRCH+4)&
     &, (IBRCH+5), (IBRCH+6),0.0,0,1,1.0,0,1,RVD1_1,RT_2,0,0,1.0,0.0,314&
     &.0,RT_9,0,1.0,0,RT_8,RVD1_2,RVD1_3,RVD1_4,RVD1_5,w,RT_6,RVD1_6,RVD&
     &1_7,RVD1_8,RVD1_9,IVD1_2,IVD1_3,RVD1_10,RVD1_11,RVD1_12,RVD1_13,RV&
     &D1_14,RVD1_15)
      RT_7 = RT_2
      IF (IVD1_3 .EQ. 0) RT_7 = RVD1_8
      IF ((IVD1_2 .EQ. 1) .AND. (STORI(NSTORI).EQ.0)) THEN
          IF (STOR(NEXC-375+293).GT.0.5) THEN
              STORF(NSTORF) = STOR(NEXC-375+161)
          ELSE
              STORF(NSTORF) = STOR(NEXC-375+296)
          ENDIF
      ENDIF
      IF (IVD1_2 .EQ. 1) THEN
        STORF(NSTORF+1) = STORF(NSTORF+1) + (w-RTCF(IVD1_1+2))*DELT
        IF (IVD1_3 .EQ. 0) STORF(NSTORF+2) = RVD1_4
        STORF(NSTORF+3) = STORF(NSTORF) + STORF(NSTORF+1) + STORF(NSTORF&
     &+2)
      ELSE
        STORF(NSTORF+3) = 0.0
      ENDIF
      w = w/RTCF(IVD1_1+2)
      Pgen = RVD1_6/(3.0*RTCF(IVD1_1)*RTCF(IVD1_1+1))
      Qgen = RVD1_7/(3.0*RTCF(IVD1_1)*RTCF(IVD1_1+1))
      T_electric = RVD1_9
      InitGv = IVD1_3
      InitEx = IVD1_2
      NSTORF = NSTORF + 4
      NSTORI = NSTORI + 1

! 430:[pgb] Output Channel 'Electromagnetic Torque'

      PGB(IPGB+21) = T_electric

! 440:[pgb] Output Channel 'Reactive Power'

      PGB(IPGB+22) = 2.0 * Qgen

! 450:[pgb] Output Channel 'Active Power'

      PGB(IPGB+23) = 2.0 * Pgen

! 460:[polpi5] Generic Current Controller 
      CALL POLPI1_EXE(RT_22,Idc2,0.0,3.142,5.0,0.02,RT_23,Alpha)
!

! 470:[tpflt] Three Phase Fault 
      CALL E3PHFLT1_EXE(SS, (IBRCH+73), (IBRCH+74), (IBRCH+75), (IBRCH+7&
     &6), (IBRCH+77), (IBRCH+78),0,IT_9,7,0.001)
      LVD1_1 = (OPENBR( (IBRCH+73),SS).AND.OPENBR( (IBRCH+74),SS).AND.OP&
     &ENBR( (IBRCH+75),SS).AND.OPENBR( (IBRCH+76),SS).AND.OPENBR( (IBRCH&
     &+77),SS).AND.OPENBR( (IBRCH+78),SS))
      IVD1_1 = E_BtoI(LVD1_1)
      IF(FIRSTSTEP .OR. (IVD1_1 .NE. STORI(NSTORI))) THEN
         CALL PSCAD_AGI2(ICALL_NO,1912940918,1-IVD1_1,"AG1")
         STORI(NSTORI) = IVD1_1
      ENDIF
      NSTORI = NSTORI + 1

! 480:[pgb] Output Channel 'Turbine Power'

      PGB(IPGB+24) = 2.0 * RT_4

! 490:[pgb] Output Channel 'Mechanical_Torque'

      PGB(IPGB+25) = RT_2

! 500:[g6p200] 6 Pulse Bridge 
      CALL COMPONENT_ID(ICALL_NO,1778893437)
      CALL E_G6PVG1_EXE( SS , NT_11(1) , NT_11(2) , NT_11(3) ,   (IBRCH+&
     &28) ,  (IBRCH+33) ,  (IBRCH+29) ,   (IBRCH+31) ,  (IBRCH+30) ,  (I&
     &BRCH+32) ,  NINT(RT_20), Alpha,  RT_18, RT_19)
!
!

! 510:[wind_governor] Wind Turbine Governor 
      CALL COMPONENT_ID(ICALL_NO,198748521)
      CALL WINDGOV1_EXE(RT_3,RT_4,2.4,1.0,2.61,RT_5)

! 520:[pgb] Output Channel 'Mechanical Speed'

      PGB(IPGB+26) = RT_3

! 530:[g6p200] 6 Pulse Bridge 
      CALL COMPONENT_ID(ICALL_NO,945329765)
      CALL E_G6PVG1_EXE( SS , NT_1(1) , NT_1(2) , NT_1(3) ,   (IBRCH+7) &
     &,  (IBRCH+12) ,  (IBRCH+8) ,   (IBRCH+10) ,  (IBRCH+9) ,  (IBRCH+1&
     &1) ,  NINT(RT_15), REAL(IT_3),  RT_13, RT_14)
!
!

! 1:[fixed_load] Fixed Load 
      CALL COMPONENT_ID(ICALL_NO,536871501)
      CALL LOAD3P2_EXE(SS, (IBRCH+54), (IBRCH+55), (IBRCH+56), (IBRCH+57&
     &), (IBRCH+58), (IBRCH+59),1.0)

! 1:[xfmr-3p2w] 3 Phase 2 Winding Transformer 'TWTG'
!  TRANSFORMER SATURATION SUBROUTINE
      IVD1_1 = NEXC
      CALL TSAT1_EXE( (IBRCH+41), (IBRCH+42), (IBRCH+43),SS,1.0,0)

! 1:[fixed_load] Fixed Load 
      CALL COMPONENT_ID(ICALL_NO,104300290)
      CALL LOAD3P2_EXE(SS, (IBRCH+61), (IBRCH+62), (IBRCH+63), (IBRCH+64&
     &), (IBRCH+65), (IBRCH+66),1.0)

! 1:[fixed_load] Fixed Load 
      CALL COMPONENT_ID(ICALL_NO,1959912746)
      CALL LOAD3P2_EXE(SS, (IBRCH+67), (IBRCH+68), (IBRCH+69), (IBRCH+70&
     &), (IBRCH+71), (IBRCH+72),1.0)

! 1:[xfmr-3p2w] 3 Phase 2 Winding Transformer 'GridTrafo'
!  TRANSFORMER SATURATION SUBROUTINE
      IVD1_1 = NEXC
      CALL TSAT1_EXE( (IBRCH+60), (IBRCH+47), (IBRCH+34),SS,1.0,0)

! 1:[fixed_load] Fixed Load 
      CALL COMPONENT_ID(ICALL_NO,268049539)
      CALL LOAD3P2_EXE(SS, (IBRCH+48), (IBRCH+49), (IBRCH+50), (IBRCH+51&
     &), (IBRCH+52), (IBRCH+53),1.0)

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 1) = RT_1
      STOF(ISTOF + 2) = RT_2
      STOF(ISTOF + 3) = RT_3
      STOI(ISTOI + 1) = IT_1
      STOF(ISTOF + 4) = RT_4
      STOF(ISTOF + 5) = RT_5
      STOF(ISTOF + 6) = RT_6
      STOF(ISTOF + 7) = RT_7
      STOF(ISTOF + 8) = RT_8
      STOF(ISTOF + 9) = RT_9
      STOF(ISTOF + 10) = RT_10
      STOF(ISTOF + 11) = RT_11
      STOF(ISTOF + 12) = w
      STOF(ISTOF + 13) = RT_12
      STOF(ISTOF + 14) = Pgen
      STOF(ISTOF + 15) = Qgen
      STOF(ISTOF + 16) = T_electric
      STOF(ISTOF + 17) = RT_13
      STOF(ISTOF + 18) = RT_14
      STOF(ISTOF + 19) = RT_15
      STOI(ISTOI + 2) = IT_2
      STOI(ISTOI + 3) = IT_3
      STOI(ISTOI + 4) = IT_4
      STOI(ISTOI + 5) = IT_5
      STOI(ISTOI + 6) = IT_6
      STOI(ISTOI + 7) = IT_7
      STOF(ISTOF + 20) = RT_16
      STOF(ISTOF + 21) = RT_17
      STOF(ISTOF + 22) = Idc1
      STOF(ISTOF + 23) = RT_18
      STOF(ISTOF + 24) = RT_19
      STOF(ISTOF + 25) = RT_20
      STOI(ISTOI + 8) = IT_8
      STOF(ISTOF + 26) = Alpha
      STOF(ISTOF + 27) = RT_21
      STOF(ISTOF + 28) = V_DC_Bus
      STOF(ISTOF + 29) = RT_22
      STOF(ISTOF + 30) = Idc2
      STOF(ISTOF + 31) = RT_23
      STOI(ISTOI + 9) = IT_9
      STOF(ISTOF + 38) = P_wtg
      STOF(ISTOF + 39) = Q_wtg
      STOF(ISTOF + 40) = U_rms_wtg
      STOF(ISTOF + 47) = Pgrid
      STOF(ISTOF + 48) = Qgrid
      STOF(ISTOF + 49) = U_rms_grid
      STOI(ISTOI + 10) = Shunt_Breaker
      STOI(ISTOI + 11) = InitGv
      STOI(ISTOI + 12) = InitEx
      STOF(ISTOF + 50) = P_grid
      STOF(ISTOF + 51) = Q_grid
      STOF(ISTOF + 52) = V_grid

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 31 + IT_0) = I_wtg(IT_0)
         STOF(ISTOF + 34 + IT_0) = V_wtg(IT_0)
         STOF(ISTOF + 40 + IT_0) = I_grid(IT_0)
         STOF(ISTOF + 43 + IT_0) = Vgrid(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

      REAL    EMTDC_VVDC    ! 
      REAL    VBRANCH       ! 
      REAL    P3PH3         ! 
      REAL    Q3PH3         ! 
      REAL    VM3PH2        ! '3 Phase RMS Voltage Measurement'
!     SUBR    EMTDC_X2COMP  ! 'Comparator with Interpolation'
      REAL    RMS3          ! 'Instantaneous RMS Measurement'

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices
      INTEGER  NT_3, NT_5, NT_7(3), NT_16(3)

! Control Signals
      INTEGER  IT_1, IT_3
      REAL     RT_9, RT_11, RT_12, RT_15, RT_16
      REAL     RT_17, Idc1, RT_20, RT_21
      REAL     V_DC_Bus, Idc2, I_wtg(3), V_wtg(3)
      REAL     P_wtg, Q_wtg, U_rms_wtg, I_grid(3)
      REAL     Vgrid(3), Pgrid, Qgrid, U_rms_grid

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1, RVD2_1(2)

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      IPGB      = NPGB
      NPGB      = NPGB + 26
      INODE     = NNODE + 2
      NNODE     = NNODE + 32
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 95
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 6
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      IT_1     = STOI(ISTOI + 1)
      RT_9     = STOF(ISTOF + 9)
      RT_11    = STOF(ISTOF + 11)
      RT_12    = STOF(ISTOF + 13)
      RT_15    = STOF(ISTOF + 19)
      IT_3     = STOI(ISTOI + 3)
      RT_16    = STOF(ISTOF + 20)
      RT_17    = STOF(ISTOF + 21)
      Idc1     = STOF(ISTOF + 22)
      RT_20    = STOF(ISTOF + 25)
      RT_21    = STOF(ISTOF + 27)
      V_DC_Bus = STOF(ISTOF + 28)
      Idc2     = STOF(ISTOF + 30)
      P_wtg    = STOF(ISTOF + 38)
      Q_wtg    = STOF(ISTOF + 39)
      U_rms_wtg = STOF(ISTOF + 40)
      Pgrid    = STOF(ISTOF + 47)
      Qgrid    = STOF(ISTOF + 48)
      U_rms_grid = STOF(ISTOF + 49)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         I_wtg(IT_0) = STOF(ISTOF + 31 + IT_0)
         V_wtg(IT_0) = STOF(ISTOF + 34 + IT_0)
         I_grid(IT_0) = STOF(ISTOF + 40 + IT_0)
         Vgrid(IT_0) = STOF(ISTOF + 43 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------

      NT_3  = NODE(INODE + 8)
      NT_5  = NODE(INODE + 10)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_7(IT_0) = NODE(INODE + 10 + IT_0)
         NT_16(IT_0) = NODE(INODE + 27 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 60:[const] Real Constant 

      RT_9 = 1.0

! 70:[ammeter] Current Meter 'Idc1'
      Idc1 = ( CBR((IBRCH+22), SS))

! 80:[voltmeter] Voltmeter (Line - Line) 'V_DC_Bus'
      V_DC_Bus = EMTDC_VVDC(SS, NT_5, NT_3)

! 90:[ammeter] Current Meter 'Idc2'
      Idc2 = ( CBR((IBRCH+27), SS))

! 100:[consti] Integer Constant 

      IT_1 = 0

! 110:[const] Real Constant 

      RT_12 = 314.0

! 120:[breaker1] Single Phase Breaker 'Shunt_Breaker'
! Single phase breaker current
!

! 140:[const] Real Constant 

      RT_11 = 120.0

! 150:[consti] Integer Constant 

      IT_3 = 0

! 160:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      I_wtg(1) = ( CBR((IBRCH+44), SS))
      I_wtg(2) = ( CBR((IBRCH+45), SS))
      I_wtg(3) = ( CBR((IBRCH+46), SS))
      V_wtg(1) = EMTDC_VVDC(SS, NT_7(1), 0)
      V_wtg(2) = EMTDC_VVDC(SS, NT_7(2), 0)
      V_wtg(3) = EMTDC_VVDC(SS, NT_7(3), 0)
      RVD1_1 = RTCF(IVD1_1) * P3PH3(SS, (IBRCH+44), (IBRCH+45), (IBRCH+4&
     &6),RTCF(IVD1_1+2),0)
      P_wtg = RVD1_1
      RVD1_1 = RTCF(IVD1_1) * Q3PH3(SS, (IBRCH+44), (IBRCH+45), (IBRCH+4&
     &6),RTCF(IVD1_1+2),0)
      Q_wtg = RVD1_1
      RVD1_1 = RTCF(IVD1_1+1) * VM3PH2(SS, NT_7(1), NT_7(2), NT_7(3), RT&
     &CF(IVD1_1+2))
      U_rms_wtg = RVD1_1

! 180:[compare] Single Input Level Comparator 
!
!
      CALL EMTDC_X2COMP(0,0,1.03,V_DC_Bus,1.0,0.0,0.0,RVD2_1)
      RT_15 = RVD2_1(1)

! 190:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      I_grid(1) = ( CBR((IBRCH+19), SS))
      I_grid(2) = ( CBR((IBRCH+20), SS))
      I_grid(3) = ( CBR((IBRCH+21), SS))
      Vgrid(1) = EMTDC_VVDC(SS, NT_16(1), 0)
      Vgrid(2) = EMTDC_VVDC(SS, NT_16(2), 0)
      Vgrid(3) = EMTDC_VVDC(SS, NT_16(3), 0)
      RVD1_1 = RTCF(IVD1_1) * P3PH3(SS, (IBRCH+19), (IBRCH+20), (IBRCH+2&
     &1),RTCF(IVD1_1+2),0)
      Pgrid = RVD1_1
      RVD1_1 = RTCF(IVD1_1) * Q3PH3(SS, (IBRCH+19), (IBRCH+20), (IBRCH+2&
     &1),RTCF(IVD1_1+2),0)
      Qgrid = RVD1_1
      RVD1_1 = RTCF(IVD1_1+1) * VM3PH2(SS, NT_16(1), NT_16(2), NT_16(3),&
     & RTCF(IVD1_1+2))
      U_rms_grid = RVD1_1

! 200:[compare] Single Input Level Comparator 
!
!
      CALL EMTDC_X2COMP(0,0,0.8424,V_DC_Bus,0.0,0.0,1.0,RVD2_1)
      RT_20 = RVD2_1(1)

! 230:[const] Real Constant 

      RT_21 = 2.56

! 250:[pgb] Output Channel 'I_wtg'

      DO IVD1_1 = 1, 3
         PGB(IPGB+1+IVD1_1-1) = 2.0 * I_wtg(IVD1_1)
      ENDDO

! 260:[pgb] Output Channel 'I_grid'

      DO IVD1_1 = 1, 3
         PGB(IPGB+4+IVD1_1-1) = 2.0 * I_grid(IVD1_1)
      ENDDO

! 270:[pgb] Output Channel 'V_wtg'

      DO IVD1_1 = 1, 3
         PGB(IPGB+7+IVD1_1-1) = 2.0 * V_wtg(IVD1_1)
      ENDDO

! 280:[pgb] Output Channel 'V_grid'

      DO IVD1_1 = 1, 3
         PGB(IPGB+10+IVD1_1-1) = 2.0 * Vgrid(IVD1_1)
      ENDDO

! 290:[pgb] Output Channel 'P_wtg'

      PGB(IPGB+13) = P_wtg

! 300:[rms-inst] Single Phase RMS Meter 
      RT_16 = RMS3( Idc1 , 2.0 )

! 310:[pgb] Output Channel 'I_DC_Link'

      PGB(IPGB+14) = 2.0 * RT_16

! 320:[pgb] Output Channel 'P_grid'

      PGB(IPGB+15) = Pgrid

! 330:[pgb] Output Channel 'Q_wtg'

      PGB(IPGB+16) = 2.0 * Q_wtg

! 340:[rms-inst] Single Phase RMS Meter 
      RT_17 = RMS3( V_DC_Bus , 2.0 )

! 350:[pgb] Output Channel 'DC_Voltage'

      PGB(IPGB+17) = RT_17

! 360:[pgb] Output Channel 'Q_grid'

      PGB(IPGB+18) = 2.0 * Qgrid

! 370:[pgb] Output Channel 'U_rms_wtg'

      PGB(IPGB+19) = 2.0 * U_rms_wtg

! 380:[pgb] Output Channel 'U_rms_grid'

      PGB(IPGB+20) = 2.0 * U_rms_grid

! 470:[tpflt] Three Phase Fault 
!
! Multi-phase Fault Currents
!

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOI(ISTOI + 1) = IT_1
      STOF(ISTOF + 9) = RT_9
      STOF(ISTOF + 11) = RT_11
      STOF(ISTOF + 13) = RT_12
      STOF(ISTOF + 19) = RT_15
      STOI(ISTOI + 3) = IT_3
      STOF(ISTOF + 20) = RT_16
      STOF(ISTOF + 21) = RT_17
      STOF(ISTOF + 22) = Idc1
      STOF(ISTOF + 25) = RT_20
      STOF(ISTOF + 27) = RT_21
      STOF(ISTOF + 28) = V_DC_Bus
      STOF(ISTOF + 30) = Idc2
      STOF(ISTOF + 38) = P_wtg
      STOF(ISTOF + 39) = Q_wtg
      STOF(ISTOF + 40) = U_rms_wtg
      STOF(ISTOF + 47) = Pgrid
      STOF(ISTOF + 48) = Qgrid
      STOF(ISTOF + 49) = U_rms_grid

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 31 + IT_0) = I_wtg(IT_0)
         STOF(ISTOF + 34 + IT_0) = V_wtg(IT_0)
         STOF(ISTOF + 40 + IT_0) = I_grid(IT_0)
         STOF(ISTOF + 43 + IT_0) = Vgrid(IT_0)
      END DO


!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainDyn_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      INTEGER  IT_1, IT_3
      REAL     RT_9, RT_11, RT_12, RT_21

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4
      REAL     RVD1_5, RVD1_6, RVD10_1(10)
      REAL     RVD10_2(10)

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 32
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 95
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 6
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 20:[wind_source] Wind Source 
      CALL COMPONENT_ID(ICALL_NO,525674661)
      CALL WINDSRC1_CFG(0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,&
     &0.0,0.0,0.0,1.0,17.0)

! 60:[const] Real Constant 
      RT_9 = 1.0

! 100:[consti] Integer Constant 
      IT_1 = 0

! 110:[const] Real Constant 
      RT_12 = 314.0

! 120:[breaker1] Single Phase Breaker 'Shunt_Breaker'
      CALL COMPONENT_ID(ICALL_NO,160589460)
      CALL E1PBRKR1_CFG(0.005,1000000.0,0.0)

! 140:[const] Real Constant 
      RT_11 = 120.0

! 150:[consti] Integer Constant 
      IT_3 = 0

! 210:[source3] Three Phase Voltage Source Model 1 'Grid'
      CALL COMPONENT_ID(ICALL_NO,956782088)
      RVD1_1 = 1.0
      RVD1_2 = 0.1
      CALL ESYS651_CFG(3,1,0,0,0,SS, (IBRCH+23), (IBRCH+24), (IBRCH+25),&
     &0,0,0, 50.0,50.0,0.0,33.0,0.0,0.0,250.0,33.0, 33.0, 1.0,80.0,2.0, &
     &1.0e-05, 1.0, 0.1, 1.0,80.0,1.0,0.1)

! 230:[const] Real Constant 
      RT_21 = 2.56

! 240:[vdcl] Voltage Dependent Current Limits 
      CALL COMPONENT_ID(ICALL_NO,1962344898)
      CALL VDCL31_CFG(-1,1,1.0,0.0002,10.0)

! 390:[mult] Multiplier 

! 400:[div] Divider 

! 410:[wind_turbine] Wind Turbine 
      CALL WINDTRB1_CFG(2.4,41.7,5462.0,1.225,1.0,2.61)

! 420:[sync_machine] Synchronous Machine 'Synchronous_G'
      CALL COMPONENT_ID(ICALL_NO,532138712)
      RVD10_1 = 0.0
      RVD10_2 = 0.0
      RVD10_1(2) = 1.0
      RVD10_2(2) = SQRT_2/(0.5-0.13*1.0)
      RVD10_1(3) = -1.0
      CALL SYNCMC3P0_CFG(0,0,1,314.0,0.332, 0.13,1.0,0.5,0.22,0.3,1.0E-6&
     &, 0.51,0.29,0.228,RVD1_1,RVD1_2,RVD1_3)
      RVD1_6 = 1.666
      CALL SYNCMC3P2_CFG(1,1,2,1,1,1,1,1,1,RVD1_6,0.4,314.0,20.0,0.0,5.0&
     &,0.02,30.0,RVD1_1,RVD1_2,0.5,0.22, 0.0001,0.3,10.0,1.0E6,1.0E6, 0.&
     &51,0.29,0.034, 1.0E6,1.0E6, RVD10_1,RVD10_2, 0.0,0.0,0.0,1.0,1.0, &
     &0.1,100.0,0.2,1.0,0.0,20.0,10.0)

! 430:[pgb] Output Channel 'Electromagnetic Torque'

! 440:[pgb] Output Channel 'Reactive Power'

! 450:[pgb] Output Channel 'Active Power'

! 460:[polpi5] Generic Current Controller 
      CALL COMPONENT_ID(ICALL_NO,89966485)
      CALL POLPI1_CFG(0.01,0.1)

! 470:[tpflt] Three Phase Fault 
      CALL E3PHFLT1_CFG(1000000.0,0.0)

! 480:[pgb] Output Channel 'Turbine Power'

! 490:[pgb] Output Channel 'Mechanical_Torque'

! 500:[g6p200] 6 Pulse Bridge 
      CALL E_G6PVG1_CFG(0, 0, 0, 10.0, 100.0, 50.0, 0.01, 1000000.0, 0.0&
     &, 100000.0, 100000.0, 0.0,0.04)

! 510:[wind_governor] Wind Turbine Governor 
      CALL COMPONENT_ID(ICALL_NO,198748521)
      CALL WINDGOV1_CFG(1,0,0,1,0,0.0,0.0, 2.0,2.4,2.61,6.2,6.2,30.0,-30&
     &.0,0.0,0.0,0.0,0.0001,0.1,0.0,0.0,25.0)

! 520:[pgb] Output Channel 'Mechanical Speed'

! 530:[g6p200] 6 Pulse Bridge 
      CALL E_G6PVG1_CFG(0, 0, 0, 10.0, 100.0, 50.0, 0.01, 1000000.0, 0.0&
     &, 100000.0, 100000.0, 0.0,0.04)
      CALL E_BRANCH_CFG( (IBRCH+13),SS,1,0,1,5000.0,0.0,0.05)
      CALL E_BRANCH_CFG( (IBRCH+18),SS,1,0,1,5000.0,0.0,0.05)
      CALL E_BRANCH_CFG( (IBRCH+14),SS,1,0,1,5000.0,0.0,0.05)
      CALL E_BRANCH_CFG( (IBRCH+16),SS,1,0,1,5000.0,0.0,0.05)
      CALL E_BRANCH_CFG( (IBRCH+15),SS,1,0,1,5000.0,0.0,0.05)
      CALL E_BRANCH_CFG( (IBRCH+17),SS,1,0,1,5000.0,0.0,0.05)

! 1:[fixed_load] Fixed Load 
      CALL COMPONENT_ID(ICALL_NO,536871501)
      CALL LOAD1P2_CFG(0,1,7.5,1.0,50.0,0.1,0.1,10.0,0.0,0.0,0.0,0.0,1.0&
     &,1.0,1.0,1.0,0.0,0.0,1.0,1.0)

! 1:[xfmr-3p2w] 3 Phase 2 Winding Transformer 'TWTG'
      CALL COMPONENT_ID(ICALL_NO,1828670465)
      RVD1_1 = ONE_3RD*2.5
      RVD1_2 = 0.981*SQRT_1BY3
      RVD1_3 = 13.0*SQRT_1BY3
      CALL E_TF2W_CFG((IXFMR + 1),1,RVD1_1,50.0,0.1,0.0,RVD1_2,RVD1_3,0.&
     &4)
      CALL E_TF2W_CFG((IXFMR + 2),1,RVD1_1,50.0,0.1,0.0,RVD1_2,RVD1_3,0.&
     &4)
      CALL E_TF2W_CFG((IXFMR + 3),1,RVD1_1,50.0,0.1,0.0,RVD1_2,RVD1_3,0.&
     &4)
      IF (0.0 .LT. 1.0E-6) THEN
        RVD1_5 = 0.0
        RVD1_6 = 0.0
        IVD1_1 = 0
      ELSE
        RVD1_6 = 0.0
        RVD1_4 = 6.0/(2.5*RVD1_6)
        RVD1_5 = RVD1_4*RVD1_2*RVD1_2
        RVD1_6 = RVD1_4*RVD1_3*RVD1_3
        IVD1_1 = 1
      ENDIF
      CALL E_BRANCH_CFG( (IBRCH+35),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+36),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+37),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+38),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+39),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+40),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL TSAT1_CFG( (IBRCH+41), (IBRCH+42), (IBRCH+43),SS,RVD1_1,RVD1_&
     &2,0.2,1.17,50.0,0.0,0.4,0.0)

! 1:[fixed_load] Fixed Load 
      CALL COMPONENT_ID(ICALL_NO,104300290)
      CALL LOAD1P2_CFG(0,1,7.5,1.0,50.0,0.2,0.1,10.0,0.0,0.0,0.0,0.0,1.0&
     &,1.0,1.0,1.0,0.0,0.0,1.0,1.0)

! 1:[fixed_load] Fixed Load 
      CALL COMPONENT_ID(ICALL_NO,1959912746)
      CALL LOAD1P2_CFG(0,1,7.5,1.0,50.0,0.1,0.1,10.0,0.0,0.0,0.0,0.0,1.0&
     &,1.0,1.0,1.0,0.0,0.0,1.0,1.0)

! 1:[xfmr-3p2w] 3 Phase 2 Winding Transformer 'GridTrafo'
      CALL COMPONENT_ID(ICALL_NO,691985601)
      RVD1_1 = ONE_3RD*250.0
      RVD1_2 = 33.0*SQRT_1BY3
      RVD1_3 = 13.0*SQRT_1BY3
      CALL E_TF2W_CFG((IXFMR + 4),0,RVD1_1,50.0,0.06,0.0,RVD1_2,RVD1_3,1&
     &.0)
      CALL E_TF2W_CFG((IXFMR + 5),0,RVD1_1,50.0,0.06,0.0,RVD1_2,RVD1_3,1&
     &.0)
      CALL E_TF2W_CFG((IXFMR + 6),0,RVD1_1,50.0,0.06,0.0,RVD1_2,RVD1_3,1&
     &.0)
      IF (0.0 .LT. 1.0E-6) THEN
        RVD1_5 = 0.0
        RVD1_6 = 0.0
        IVD1_1 = 0
      ELSE
        RVD1_6 = 0.0
        RVD1_4 = 6.0/(250.0*RVD1_6)
        RVD1_5 = RVD1_4*RVD1_2*RVD1_2
        RVD1_6 = RVD1_4*RVD1_3*RVD1_3
        IVD1_1 = 1
      ENDIF
      CALL E_BRANCH_CFG( (IBRCH+79),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+80),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+81),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+82),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+83),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+84),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL TSAT1_CFG( (IBRCH+60), (IBRCH+47), (IBRCH+34),SS,RVD1_1,RVD1_&
     &2,0.0,1.25,50.0,1.0,1.0,0.1)

! 1:[fixed_load] Fixed Load 
      CALL COMPONENT_ID(ICALL_NO,268049539)
      CALL LOAD1P2_CFG(0,1,7.5,1.0,50.0,2.0,1.2,10.0,0.0,0.0,0.0,0.0,1.0&
     &,1.0,1.0,1.0,0.0,0.0,1.0,1.0)

      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices
      INTEGER  NT_3, NT_5, NT_7(3), NT_16(3)

! Control Signals
      INTEGER  IT_1, IT_3
      REAL     RT_9, RT_11, RT_12, RT_21

! Internal Variables
      INTEGER  IVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 32
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 95
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 6
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------

      NT_3  = NODE(INODE + 8)
      NT_5  = NODE(INODE + 10)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_7(IT_0) = NODE(INODE + 10 + IT_0)
         NT_16(IT_0) = NODE(INODE + 27 + IT_0)
      END DO

!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 60:[const] Real Constant 
      RT_9 = 1.0

! 100:[consti] Integer Constant 
      IT_1 = 0

! 110:[const] Real Constant 
      RT_12 = 314.0

! 140:[const] Real Constant 
      RT_11 = 120.0

! 150:[consti] Integer Constant 
      IT_3 = 0

! 160:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      IF (ABS(1.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1) = 1.0/ABS(1.0)
      ELSE
        RTCF(IVD1_1) = 1.0
      ENDIF
      IF (ABS(1.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1+1) = 1.0/ABS(1.0)
      ELSE
        RTCF(IVD1_1+1) = 1.0
      ENDIF
      RTCF(IVD1_1+2) = 0.5

! 180:[compare] Single Input Level Comparator 

! 190:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      IF (ABS(1.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1) = 1.0/ABS(1.0)
      ELSE
        RTCF(IVD1_1) = 1.0
      ENDIF
      IF (ABS(1.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1+1) = 1.0/ABS(1.0)
      ELSE
        RTCF(IVD1_1+1) = 1.0
      ENDIF
      RTCF(IVD1_1+2) = 0.5

! 200:[compare] Single Input Level Comparator 

! 230:[const] Real Constant 
      RT_21 = 2.56

! 250:[pgb] Output Channel 'I_wtg'

! 260:[pgb] Output Channel 'I_grid'

! 270:[pgb] Output Channel 'V_wtg'

! 280:[pgb] Output Channel 'V_grid'

! 290:[pgb] Output Channel 'P_wtg'

! 300:[rms-inst] Single Phase RMS Meter 

! 310:[pgb] Output Channel 'I_DC_Link'

! 320:[pgb] Output Channel 'P_grid'

! 330:[pgb] Output Channel 'Q_wtg'

! 340:[rms-inst] Single Phase RMS Meter 

! 350:[pgb] Output Channel 'DC_Voltage'

! 360:[pgb] Output Channel 'Q_grid'

! 370:[pgb] Output Channel 'U_rms_wtg'

! 380:[pgb] Output Channel 'U_rms_grid'

      RETURN
      END

